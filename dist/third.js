(()=>{"use strict";var e={493:(e,t,r)=>{r.d(t,{Z:()=>o});var n=r(984);const o=e=>{document.querySelector("#city2").innerText=`${e.city.name}, ${e.sys.country}`,document.querySelector("#temp2").innerHTML=`${Math.round(e.list.temp[0].day)}&deg;C`,document.querySelector("#min-max2").innerHTML=`${Math.floor(e.list.temp[0].min)}&deg;C (min) / ${Math.ceil(e.list.temp[0].max)}&deg;C (max)`;const t=document.querySelector("#description2");t.innerText=`${e.list.weather[0].main}`;const r=document.querySelector("#icon2");r.innerText=`${e.list.weather[0].icon}`;const o=document.querySelector("#date2"),c=new Date;o.innerText=(0,n.Z)(c),convertTemp(e),document.querySelector(".weather2").style.backgroundImage=`url('./images/${{Clear:"sun",Clouds:"cloudy",Rain:"rain",Mist:"fog",Fog:"fog",Snow:"snow",Thunderstorms:"thunder",Drizzle:"thunder",Haze:"fog"}[t.textContent]}.gif')`,document.querySelector(".weather2").style.backgroundSize="cover",document.querySelector("#icon2").src=`./icons/${r.textContent}.png`}},984:(e,t,r)=>{r.d(t,{Z:()=>n});const n=e=>{const t=e.getFullYear(),r=["Junuary","February","March","April","May","Jun","July","August","September","October","November","December"][e.getMonth()];return`${e.getDate()} ${r} (${["Sunday","Monday","Thuesday","Wednesday","Thursday","Friday","Saturday"][e.getDay()]}), ${t}`}}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var c=t[n]={exports:{}};return e[n](c,c.exports,r),c.exports}r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e=r(493);const t=document.querySelector("#error2");t.innerHTML="";const n=async r=>{try{const t=await fetch(`api.openweathermap.org/data/2.5/forecast/daily?q=${r}&cnt=1&appid=6dedb46ebef0c664b3eab37ba3f7b970&units=metric`);console.log(n);const o=await t.json();(0,e.Z)(o)}catch(e){t.innerHTML=`this ${e}`}};document.querySelector("#sub-button").addEventListener("click",(()=>{const e=document.querySelector("#input-box").value;n(e),document.querySelector(".weather2").style.display="block"}));const o=document.querySelector("#input-box");o.addEventListener("keypress",(e=>{13===e.keyCode&&(n(o.value),document.querySelector(".weather2").style.display="block")}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,